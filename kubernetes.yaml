apiVersion: v1
kind: Namespace # Se especifica el tipo de recurso
metadata:
  name: lab-ele
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-nest-ele
  namespace: lab-ele # Indico que quiero configurar mi API en el namespace que creé
  labels: # Permite agregar etiquetas
    app: backend-nest-eletiqueta
spec: # Aqui se empieza a definir lo que quiero desplegas
  replicas: 2 #Indique que cuando se levante se replique N cantidad de veces
  selector: # Indico un nombre para luego buscarlo a traves del servicio
    matchLabels:
      app: backend-nest-eletiqueta
  template:
    metadata:
      labels:
        app: backend-nest-eletiqueta
    spec:
      containers:
      - name: backend-nest-elecontainer
        image: us-west1-docker.pkg.dev/lab-agibiz/docker-repository/backend-nest-elemagen # Le indico la image que se subio al repo de GCP
        imagePullPolicy: Always # Le indico que cada vez que ocupe la imagen siempre la descargue para que tenga la ultima versión de la imagen
      imagePullSecrets: # Especifica cual es el secret que debe usar para autenticar en GCP
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: backend-nest-eleservice
  namespace: lab-ele
  labels:
    app: backend-nest-eleservice
spec:
  selector: 
    app: backend-nest-eletiqueta
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1 #Configuracion del Ingress Controller de NGINX
kind: Ingress
metadata:
  name: ingres-backend-nest-ele
  namespace: lab-ele
spec:
  ingressClassName: nginx
  rules:
  - host: ele.devops.cl
    http: 
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
           service:
            name: backend-nest-eleservice
            port:
              number: 80